链表：
  linked storage for data
  discontinuous storage structure in physical storage unit, the logical order of data elements is achieved through the linking of pointers in the linked list.
  组成：一系列结点
    结点：存储元素的数据域 && 存储下一个元素的指针域
  STL中的链表是一个双向循环链表
  优点：可以对任意位置快速插入和删除元素；动态存储分配，不会造成浪费和溢出
  缺点：遍历速度较慢；占用内存大
  因为链表的存储方式并不是连续的内存空间，所以链表中的迭代器只支持迁移和后移，属于双向迭代器
  链表的重要性质就是插入和删除操作都不会造成原有迭代器失效（对比vector）

构造：
**函数原型：**

* `list<T> list;`                               //list采用采用模板类实现,对象的默认构造形式：
* `list(beg,end);`                           //构造函数将[beg, end)区间中的元素拷贝给本身。
* `list(n,elem);`                             //构造函数将n个elem拷贝给本身。
* `list(const list &lst);`            //拷贝构造函数。

#### 3.7.3 list 赋值和交换

**功能描述：**

* 给list容器进行赋值，以及交换list容器

**函数原型：**
* `assign(beg, end);`            //将[beg, end)区间中的数据拷贝赋值给本身。
* `assign(n, elem);`              //将n个elem拷贝赋值给本身。
* `list& operator=(const list &lst);`         //重载等号操作符
* `swap(lst);`                         //将lst与本身的元素互换。
（也可以用等号直接赋值）
